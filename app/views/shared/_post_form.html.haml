:javascript

  angular.module('timeoverflow').controller('TagTypeaheadCtrl',
  function($scope, $http) {

  $scope.selected = undefined;

  // Any function returning a promise object can be used to load values asynchronously
  $scope.getTags = function(val) {

    return $http.get('/tags/index', {
      params: {
        term: val
      }
    }).then(function(res){

            var tags = [];

            angular.forEach(res.data, function(item){
                tags.push(item);
            });

            return tags;

        });
    };
  });

= form_for(post, html: { name: "form" }) do |f|
  .form-group
    = f.label :title
    = f.text_field :title, class: "form-control"
  .form-group
    = f.label :description
    = f.text_area :description, rows: "10", class: "form-control"
  .form-group
    = f.label :category
    = f.select :category_id, Category.all.sort_by{ |a| a.name.downcase }.map{ |cat| [cat.name, cat.id] }, { include_blank: true }, { class: "form-control" }
  .form-group
    = f.label :tag_list
    = f.text_field :tag_list, :placeholder => t('application.tips.entertag'), class: "form-control", "ng-controller" => "TagTypeaheadCtrl", "ng-model" => "asyncSelected", "typeahead" => "tag for tag in getTags($viewValue) | filter:$viewValue | limitTo:8" , "typeahead-loading" => "loadingTags"
    %i{"ng-show" => "loadingTags", :class => "glyphicon glyphicon-refresh"}

  - if current_user.manages? current_organization
    .form-group
      = f.label :user, class: "control-label"
      = f.select :user_id, options_for_select(current_organization.members.active.order("members.member_uid").map{ |mem| ["#{mem.member_uid} #{mem.user.to_s}", mem.user_id] }, selected: post.user.id || current_user.id), {}, { id: "select2", class: "form-control", required: true }
    = f.hidden_field :publisher_id, value: current_user.id

  = f.button label_button, class: "btn btn-default", style: "margin-bottom: 20px;"

:javascript

  $("#select2").select2({
    formatNoMatches: function() {
        return "#{t 'application.tips.user_not_found'}";
    }
  })
